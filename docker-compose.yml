services:
  postgres:
    image: postgres:17
    container_name: mst-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: mst-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mst-api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres:5432/postgres
      REDIS_URL: redis://redis:6379/0
      LOG_LEVEL: INFO
      ALLOWED_ORIGINS: "*"
      TICKERS: AAPL,MSFT,GOOGL
    ports:
      - "8000:8000"
    restart: unless-stopped
    # The image's entrypoint already waits for DB and runs Alembic before starting Uvicorn

volumes:
  pgdata: {}


